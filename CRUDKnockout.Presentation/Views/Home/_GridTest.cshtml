@model CRUDKnockout.Presentation.Models.UserPaginationModel
@{
    ViewBag.Title = "_GridTest";
}
<h2>GridTest</h2>
<link rel="stylesheet" href="~/Content/slick.grid.css" type="text/css" />
<link rel="stylesheet" href="~/Content/custom.css" type="text/css" />
<link rel="stylesheet" href="~/Content/examples.css" type="text/css" />
<link rel="stylesheet" href="~/Content/slick.columnpicker.css" type="text/css" />

<div>
    @using (Html.BeginForm("_GridTest", "Home", FormMethod.Post))
    { <div id="myGrid" style="width:100%;height:500px;"></div>

        <table cellpadding="0" cellspacing="0">
            <tr>
                
                    @for (
                        int i = 1; i <= 2; i++)
                    {
                    <td>
                        @if (i != 4)
                        {
                            <a href="javascript:PagerClick(@i);">@i</a>
                        }
                        else
                        {
                            <span>@i</span>
                        }
                    </td>
                    }
                
                
            </tr>
        </table>
        <input type="hidden" id="hfCurrentPageIndex" name="currentPageIndex" />
    }
    <script type="text/javascript">
        function PagerClick(index) {
            var columns = [
                { id: "Name", name: "Name", field: "Name" },
                { id: "Address", name: "Address", field: "Address" },
                { id: "Age", name: "Age", field: "Age" },
                { id: "Gender", name: "Gender", field: "Gender" },
                { id: "PhoneNumber", name: "PhoneNumber", field: "PhoneNumber" },
                { id: "delete", name: "Action", width: 70, formatter: buttonFormatter },
                { id: "edit", name: "Action", width: 70, formatter: button1Formatter },
                { id: "detail", name: "Detail", width: 70, formatter: detailedUser }
            ];
            function buttonFormatter(row, cell, value, columnDef, dataContext) {
                var button = "<input value='Delete 'class='del' onclick='DeleteData(" + dataContext.ID + ")' type='button' id='deletebutton' />";
                return button;
            }
            function button1Formatter(row, cell, value, columnDef, dataContext) {
                var button = "<input value='Edit 'class='del' onclick='EditData(" + JSON.stringify(dataContext) + ")' type='button'  />";
                return button;
            }
            function detailedUser(row, cell, value, columnDef, dataContext) {
                var button = "<input value='Detail' onclick='Detail(" + JSON.stringify(dataContext) + ")' type='button'  />";
                return button;
            }

            //on click of detail button
            Detail = function (data) {
                UserRegisterViewModel.tempUser = data;
                $.ajax({
                    url: '/Home/_RegisterUser',
                    type: "post",
                    data: ({ ID: data.ID }),
                    contenttype: 'application/json',
                    success: function (datas) {
                        var newdata = '<div class="modal fade" role="dialog" aria-labelledby="mySmallModalLabel" tabindex="-1"style="width:400px;height:500px;align-items:center"> <div class="modal-dialog modal-sm" role="document"><div class="modal-content" data-bind="with: $data.tempUser"><button type="button" class="close" data-dismiss="modal">&times;</button>' + datas + '</div></div></div>';
                        var ele = document.getElementById("div1")
                        ele.innerHTML = newdata;
                        eligible = ko.observable(false);
                        addUser = function () { }
                        //occurs when the modal is about to be shown
                        $("#div1 .modal").on('show.bs.modal', function () {
                            ko.applyBindings(UserRegisterViewModel, $('#div1 .modal')[0]);
                        });
                        //to open the modal
                        $(".fade").modal('show')
                        //to disable the mouse
                        $(".fade").mouseover(function () { $(this).css("pointer-events", "none") })
                    },
                })
            }
            EditData = function (data) {
                UserRegisterViewModel.tempUser = data;
                console.log(data.ID+'value of data id in edit')
                $.ajax({
                    url: '/Home/_RegisterUser',
                    type: "post",
                    data: ({ ID: data.ID }),
                    contenttype: 'application/json',
                    success: function (datas) {
                        var newdata = '<div class="modal fade"  role="dialog" aria-labelledby="mySmallModalLabel" tabindex="-1"style="width:400px;height:500px;align-items:center"> <div class="modal-dialog modal-sm" role="document"><div class="modal-content" data-bind="with: $data.tempUser"><button type="button" class="close" data-dismiss="modal">&times;</button>' + datas + '<input type="button"  class="btn btn-primary" value="Edit User" data-bind="click: updateuser" /></div></div></div> ';
                        var ele = document.getElementById("div1")
                        ele.innerHTML = newdata;
                        eligible = ko.observable(false);
                        addUser = function () { }
                        updateuser = function () {
                            var dataObject = ko.toJSON(this);
                            $.ajax({
                                url: '/api/edituser/' + data.ID,
                                type: "post",
                                data: dataObject,
                                contentType: 'application/json',
                                success: function (data) {
                                    alert('User updated successfully')
                                    $(".fade").modal('hide');
                                }
                            });
                        }
                        $("#div1 .modal").on('show.bs.modal', function () {
                            ko.applyBindings(UserRegisterViewModel, $('#div1 .modal')[0]);
                        });
                        $(".fade").modal('show')
                    },
                })
            }
            DeleteData = function (id) {
                $.ajax({
                    url: '/api/deleteuser/' + id,
                    type: 'delete',
                    contentType: 'application/json',
                    success: function () {
                        $.ajax({
                            url: '/Home/_GridTest',
                            type: "post",
                            data: ({ ID: index }),
                            success: function (datas) {
                                grid = new Slick.Grid("#myGrid", datas.User, columns, options);
                            }
                        })
                    }
                });
            }
            var options = {
                enableCellNavigation: true,
            };
            $.ajax({
                url: '/Home/_GridTest',
                type: "post",
                data: ({ID:index}),
                contenttype: 'application/json',
                success: function (datas) {
                    grid = new Slick.Grid("#myGrid", datas.User, columns, options);
                }
            });           
        }
    </script>
</div>
