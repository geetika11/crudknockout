@model CRUDKnockout.Presentation.Models.UserPaginationModel
@{
    ViewBag.Title = "_GridTest";
}
<h2>GridTest</h2>
<link rel="stylesheet" href="~/Content/slick.grid.css" type="text/css" />
<link rel="stylesheet" href="~/Content/custom.css" type="text/css" />
<link rel="stylesheet" href="~/Content/examples.css" type="text/css" />
<link rel="stylesheet" href="~/Content/slick.columnpicker.css" type="text/css" />

<div>
    @using (Html.BeginForm("_GridTest", "Home", FormMethod.Post))
    { <div id="myGrid" style="width:100%;height:500px;"></div>

        <table cellpadding="0" cellspacing="0">
            <tr>
                
                    @for (
                        int i = 1; i <= 2; i++)
                    {
                    <td>
                        @if (i != 4)
                        {
                            <a href="javascript:PagerClick(@i);">@i</a>
                        }
                        else
                        {
                            <span>@i</span>
                        }
                    </td>
                    }
                
                
            </tr>
        </table>
        <input type="hidden" id="hfCurrentPageIndex" name="currentPageIndex" />
    }
    <script type="text/javascript">
        function PagerClick(index) {
            var columns = [
                { id: "Name", name: "Name", field: "Name" },
                { id: "Address", name: "Address", field: "Address" },
                { id: "Age", name: "Age", field: "Age" },
                { id: "Gender", name: "Gender", field: "Gender" },
                { id: "PhoneNumber", name: "PhoneNumber", field: "PhoneNumber" },
                { id: "delete", name: "Action", width: 70, formatter: buttonFormatter },
                { id: "edit", name: "Action", width: 70, formatter: button1Formatter }
            ];
            function buttonFormatter(row, cell, value, columnDef, dataContext) {
                var button = "<input value='delete 'class='del' onclick='DeleteData(" + dataContext.ID + ")' type='button' id='deletebutton' />";
                return button;
            }
            function button1Formatter(row, cell, value, columnDef, dataContext) {
                var button = "<input value='edit 'class='del' onclick='EditData(" + dataContext.ID + ")' type='button'  />";
                return button;
            }
            EditData = function (ID) {
                $(".fade").modal('show')
                Name = ko.observable();
                Name(ID)
                $.ajax({
                    url: '/Home/_RegisterUser',
                    type: "post",
                    data: ({ ID: ID }),
                    contenttype: 'application/json',
                    success: function (datas) {
                       console.log('data before clinet', $("#userList").html(datas));
                    },
                })
            }
            DeleteData = function (id) {
                $.ajax({
                    url: '/api/deleteuser/' + id,
                    type: 'delete',
                    contentType: 'application/json',
                    success: function () {
                        $.ajax({
                            url: '/Home/_GridTest',
                            type: "post",
                            data: ({ ID: index }),
                            success: function (datas) {
                                grid = new Slick.Grid("#myGrid", datas.User, columns, options);
                            }
                        })
                    }
                });
            }
            var options = {
                enableCellNavigation: true,
            };
            $.ajax({
                url: '/Home/_GridTest',
                type: "post",
                data: ({ID:index}),
                contenttype: 'application/json',
                success: function (datas) {
                    grid = new Slick.Grid("#myGrid", datas.User, columns, options);
                }
            });           
        }
    </script>
</div>
